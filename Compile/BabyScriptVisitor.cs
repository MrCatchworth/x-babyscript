//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\Johnny\Documents\programming\XRebirthBabyScript.Core\BabyScript.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace XRebirthBabyScript.Compile {

    using System.Linq;
    using System.Text.RegularExpressions;
	using XRebirthBabyScript.Tree;



using Antlr4.Runtime.Misc;
using Antlr4.Runtime.Tree;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete generic visitor for a parse tree produced
/// by <see cref="BabyScriptParser"/>.
/// </summary>
/// <typeparam name="Result">The return type of the visit operation.</typeparam>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public interface IBabyScriptVisitor<Result> : IParseTreeVisitor<Result> {
	/// <summary>
	/// Visit a parse tree produced by <see cref="BabyScriptParser.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitDocument([NotNull] BabyScriptParser.DocumentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BabyScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExpr([NotNull] BabyScriptParser.ExprContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BabyScriptParser.exprEof"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitExprEof([NotNull] BabyScriptParser.ExprEofContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BabyScriptParser.tableDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableDef([NotNull] BabyScriptParser.TableDefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BabyScriptParser.tableRowDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitTableRowDef([NotNull] BabyScriptParser.TableRowDefContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BabyScriptParser.squareList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitSquareList([NotNull] BabyScriptParser.SquareListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BabyScriptParser.braceList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitBraceList([NotNull] BabyScriptParser.BraceListContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BabyScriptParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAtom([NotNull] BabyScriptParser.AtomContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Element</c>
	/// labeled alternative in <see cref="BabyScriptParser.node"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElement([NotNull] BabyScriptParser.ElementContext context);
	/// <summary>
	/// Visit a parse tree produced by the <c>Comment</c>
	/// labeled alternative in <see cref="BabyScriptParser.node"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitComment([NotNull] BabyScriptParser.CommentContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BabyScriptParser.elementAttributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitElementAttributes([NotNull] BabyScriptParser.ElementAttributesContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BabyScriptParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitAttribute([NotNull] BabyScriptParser.AttributeContext context);
	/// <summary>
	/// Visit a parse tree produced by <see cref="BabyScriptParser.nodeChildren"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	/// <return>The visitor result.</return>
	Result VisitNodeChildren([NotNull] BabyScriptParser.NodeChildrenContext context);
}
} // namespace XRebirthBabyScript.Compile
