//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     ANTLR Version: 4.7.1
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

// Generated from c:\Users\Johnny\Documents\programming\XRebirthBabyScript.Core\BabyScript.g4 by ANTLR 4.7.1

// Unreachable code detected
#pragma warning disable 0162
// The variable '...' is assigned but its value is never used
#pragma warning disable 0219
// Missing XML comment for publicly visible type or member '...'
#pragma warning disable 1591
// Ambiguous reference in cref attribute
#pragma warning disable 419

namespace XRebirthBabyScript.Compile {

    using System.Linq;
    using System.Text.RegularExpressions;
	using XRebirthBabyScript.Tree;



using Antlr4.Runtime.Misc;
using IParseTreeListener = Antlr4.Runtime.Tree.IParseTreeListener;
using IToken = Antlr4.Runtime.IToken;

/// <summary>
/// This interface defines a complete listener for a parse tree produced by
/// <see cref="BabyScriptParser"/>.
/// </summary>
[System.CodeDom.Compiler.GeneratedCode("ANTLR", "4.7.1")]
[System.CLSCompliant(false)]
public interface IBabyScriptListener : IParseTreeListener {
	/// <summary>
	/// Enter a parse tree produced by <see cref="BabyScriptParser.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterDocument([NotNull] BabyScriptParser.DocumentContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BabyScriptParser.document"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitDocument([NotNull] BabyScriptParser.DocumentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BabyScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExpr([NotNull] BabyScriptParser.ExprContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BabyScriptParser.expr"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExpr([NotNull] BabyScriptParser.ExprContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BabyScriptParser.exprEof"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterExprEof([NotNull] BabyScriptParser.ExprEofContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BabyScriptParser.exprEof"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitExprEof([NotNull] BabyScriptParser.ExprEofContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BabyScriptParser.tableDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableDef([NotNull] BabyScriptParser.TableDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BabyScriptParser.tableDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableDef([NotNull] BabyScriptParser.TableDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BabyScriptParser.tableRowDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterTableRowDef([NotNull] BabyScriptParser.TableRowDefContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BabyScriptParser.tableRowDef"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitTableRowDef([NotNull] BabyScriptParser.TableRowDefContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BabyScriptParser.squareList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterSquareList([NotNull] BabyScriptParser.SquareListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BabyScriptParser.squareList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitSquareList([NotNull] BabyScriptParser.SquareListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BabyScriptParser.braceList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterBraceList([NotNull] BabyScriptParser.BraceListContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BabyScriptParser.braceList"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitBraceList([NotNull] BabyScriptParser.BraceListContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BabyScriptParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAtom([NotNull] BabyScriptParser.AtomContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BabyScriptParser.atom"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAtom([NotNull] BabyScriptParser.AtomContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Element</c>
	/// labeled alternative in <see cref="BabyScriptParser.node"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElement([NotNull] BabyScriptParser.ElementContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Element</c>
	/// labeled alternative in <see cref="BabyScriptParser.node"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElement([NotNull] BabyScriptParser.ElementContext context);
	/// <summary>
	/// Enter a parse tree produced by the <c>Comment</c>
	/// labeled alternative in <see cref="BabyScriptParser.node"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterComment([NotNull] BabyScriptParser.CommentContext context);
	/// <summary>
	/// Exit a parse tree produced by the <c>Comment</c>
	/// labeled alternative in <see cref="BabyScriptParser.node"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitComment([NotNull] BabyScriptParser.CommentContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BabyScriptParser.elementAttributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterElementAttributes([NotNull] BabyScriptParser.ElementAttributesContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BabyScriptParser.elementAttributes"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitElementAttributes([NotNull] BabyScriptParser.ElementAttributesContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BabyScriptParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterAttribute([NotNull] BabyScriptParser.AttributeContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BabyScriptParser.attribute"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitAttribute([NotNull] BabyScriptParser.AttributeContext context);
	/// <summary>
	/// Enter a parse tree produced by <see cref="BabyScriptParser.nodeChildren"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void EnterNodeChildren([NotNull] BabyScriptParser.NodeChildrenContext context);
	/// <summary>
	/// Exit a parse tree produced by <see cref="BabyScriptParser.nodeChildren"/>.
	/// </summary>
	/// <param name="context">The parse tree.</param>
	void ExitNodeChildren([NotNull] BabyScriptParser.NodeChildrenContext context);
}
} // namespace XRebirthBabyScript.Compile
